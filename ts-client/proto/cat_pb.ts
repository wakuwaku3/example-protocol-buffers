// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file cat.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message CatServiceGetRequest
 */
export class CatServiceGetRequest extends Message<CatServiceGetRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<CatServiceGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "CatServiceGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatServiceGetRequest {
    return new CatServiceGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatServiceGetRequest {
    return new CatServiceGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatServiceGetRequest {
    return new CatServiceGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CatServiceGetRequest | PlainMessage<CatServiceGetRequest> | undefined, b: CatServiceGetRequest | PlainMessage<CatServiceGetRequest> | undefined): boolean {
    return proto3.util.equals(CatServiceGetRequest, a, b);
  }
}

/**
 * @generated from message CatServiceGetResponse
 */
export class CatServiceGetResponse extends Message<CatServiceGetResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string kind = 3;
   */
  kind = "";

  /**
   * @generated from field: google.protobuf.Timestamp birthed_at = 4;
   */
  birthedAt?: Timestamp;

  /**
   * @generated from field: repeated CatServiceGetResponseChild children = 5;
   */
  children: CatServiceGetResponseChild[] = [];

  constructor(data?: PartialMessage<CatServiceGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "CatServiceGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "birthed_at", kind: "message", T: Timestamp },
    { no: 5, name: "children", kind: "message", T: CatServiceGetResponseChild, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatServiceGetResponse {
    return new CatServiceGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatServiceGetResponse {
    return new CatServiceGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatServiceGetResponse {
    return new CatServiceGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CatServiceGetResponse | PlainMessage<CatServiceGetResponse> | undefined, b: CatServiceGetResponse | PlainMessage<CatServiceGetResponse> | undefined): boolean {
    return proto3.util.equals(CatServiceGetResponse, a, b);
  }
}

/**
 * @generated from message CatServiceGetResponseChild
 */
export class CatServiceGetResponseChild extends Message<CatServiceGetResponseChild> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string kind = 3;
   */
  kind = "";

  constructor(data?: PartialMessage<CatServiceGetResponseChild>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "CatServiceGetResponseChild";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatServiceGetResponseChild {
    return new CatServiceGetResponseChild().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatServiceGetResponseChild {
    return new CatServiceGetResponseChild().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatServiceGetResponseChild {
    return new CatServiceGetResponseChild().fromJsonString(jsonString, options);
  }

  static equals(a: CatServiceGetResponseChild | PlainMessage<CatServiceGetResponseChild> | undefined, b: CatServiceGetResponseChild | PlainMessage<CatServiceGetResponseChild> | undefined): boolean {
    return proto3.util.equals(CatServiceGetResponseChild, a, b);
  }
}

