// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file dog.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message DogServiceGetRequest
 */
export class DogServiceGetRequest extends Message<DogServiceGetRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DogServiceGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DogServiceGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DogServiceGetRequest {
    return new DogServiceGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DogServiceGetRequest {
    return new DogServiceGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DogServiceGetRequest {
    return new DogServiceGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DogServiceGetRequest | PlainMessage<DogServiceGetRequest> | undefined, b: DogServiceGetRequest | PlainMessage<DogServiceGetRequest> | undefined): boolean {
    return proto3.util.equals(DogServiceGetRequest, a, b);
  }
}

/**
 * @generated from message DogServiceGetResponse
 */
export class DogServiceGetResponse extends Message<DogServiceGetResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string kind = 3;
   */
  kind = "";

  /**
   * @generated from field: google.protobuf.Timestamp birthed_at = 4;
   */
  birthedAt?: Timestamp;

  /**
   * @generated from field: repeated DogServiceGetRequestChild children = 5;
   */
  children: DogServiceGetRequestChild[] = [];

  constructor(data?: PartialMessage<DogServiceGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DogServiceGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "birthed_at", kind: "message", T: Timestamp },
    { no: 5, name: "children", kind: "message", T: DogServiceGetRequestChild, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DogServiceGetResponse {
    return new DogServiceGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DogServiceGetResponse {
    return new DogServiceGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DogServiceGetResponse {
    return new DogServiceGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DogServiceGetResponse | PlainMessage<DogServiceGetResponse> | undefined, b: DogServiceGetResponse | PlainMessage<DogServiceGetResponse> | undefined): boolean {
    return proto3.util.equals(DogServiceGetResponse, a, b);
  }
}

/**
 * @generated from message DogServiceGetRequestChild
 */
export class DogServiceGetRequestChild extends Message<DogServiceGetRequestChild> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string kind = 3;
   */
  kind = "";

  constructor(data?: PartialMessage<DogServiceGetRequestChild>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DogServiceGetRequestChild";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DogServiceGetRequestChild {
    return new DogServiceGetRequestChild().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DogServiceGetRequestChild {
    return new DogServiceGetRequestChild().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DogServiceGetRequestChild {
    return new DogServiceGetRequestChild().fromJsonString(jsonString, options);
  }

  static equals(a: DogServiceGetRequestChild | PlainMessage<DogServiceGetRequestChild> | undefined, b: DogServiceGetRequestChild | PlainMessage<DogServiceGetRequestChild> | undefined): boolean {
    return proto3.util.equals(DogServiceGetRequestChild, a, b);
  }
}

